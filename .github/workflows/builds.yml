name: Builds

on:
  push:
  pull_request:
    branches:
      - master
      - 'release/**'

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  linux:
    runs-on: ubuntu-latest
    container: ghcr.io/acts-project/${{ matrix.image }}:v5
    strategy:
      matrix:
        image:
          - centos7-lcg95apython3
          - centos7-lcg96
          - ubuntu2004
    env:
      SETUP: true
      INSTALL_DIR: ${{ github.workspace }}/install
    steps:
      - uses: actions/checkout@v2
      - name: Define setup script
        if: contains(matrix.image, 'lcg')
        run: echo "::set-env name=SETUP::source /opt/lcg_view/setup.sh"
      - name: Configure
        # use manual mkdir+cd. CMake on LCG95 does not like -B ... -S ...
        run: >
          ${SETUP} &&
          mkdir build && cd build &&
          cmake ..
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}"
          -DACTS_BUILD_EVERYTHING=on
      - name: Build
        run: ${SETUP} && cmake --build build -- 
      - name: Unit tests
        run: ${SETUP} && cmake --build build -- test
      - name: Integration tests
        run: ${SETUP} && cmake --build build -- integrationtests
      - name: Install
        run: ${SETUP} && cmake --build build -- install
      - uses: actions/upload-artifact@v2
        with:
          name: acts-${{ matrix.image }}
          path: ${{ env.INSTALL_DIR }}
      - name: Downstream configure
        run: >
          ${SETUP} &&
          mkdir build-downstream && cd build-downstream &&
          cmake ../Tests/DownstreamProject
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DCMAKE_PREFIX_PATH="${INSTALL_DIR}"
      - name: Downstream build
        run: ${SETUP} && cmake --build build-downstream --
      - name: Downstream run
        run: ${SETUP} && ./build-downstream/bin/ShowActsVersion
  macos:
    runs-on: macos-10.15
    env:
      INSTALL_DIR: ${{ github.workspace }}/install
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: >
          brew install cmake eigen ninja
          && sudo mkdir /usr/local/acts
          && sudo chown $USER /usr/local/acts
          && curl -SL https://acts.web.cern.ch/ACTS/ci/macOS/deps.43e0201.tar.gz | tar -xzC /usr/local/acts
      - name: Configure
        run: >
          cmake -B build -S .
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DCMAKE_INSTALL_PREFIX="${INSTALL_DIR}"
          -DCMAKE_PREFIX_PATH=/usr/local/acts
          -DACTS_BUILD_EVERYTHING=on
      - name: Build
        run: cmake --build build  --
      - name: Unit tests
        run: cmake --build build -- test
      - name: Integration tests
        run: cmake --build build -- integrationtests
      - name: Install
        run: cmake --build build -- install
      - uses: actions/upload-artifact@v2
        with:
          name: acts-macos
          path: ${{ env.INSTALL_DIR }}
      - name: Downstream configure
        run: >
          cmake -B build-downstream -S Tests/DownstreamProject
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DCMAKE_PREFIX_PATH="${INSTALL_DIR};/usr/local/acts"
      - name: Downstream build
        run: cmake --build build-downstream --
      - name: Downstream run
        run: ./build-downstream/bin/ShowActsVersion
  cuda:
    runs-on: ubuntu-latest
    container: ghcr.io/acts-project/ubuntu1804_cuda:v5
    steps:
      - uses: actions/checkout@v2
      - name: Configure
        run: >
          cmake -B build -S .
          -GNinja
          -DCMAKE_CXX_COMPILER=/usr/bin/g++-8
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DACTS_BUILD_CUDA_PLUGIN=ON
          -DACTS_BUILD_UNITTESTS=ON
      - name: Build
        run: cmake --build build --
  docs:
    runs-on: ubuntu-latest
    container: ghcr.io/acts-project/ubuntu2004:v5
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: >
          apt-get install -y doxygen
          && pip3 install -r docs/requirements.txt
      - name: Configure
        run: cmake -B build -S . -GNinja -DACTS_BUILD_DOCS=on
      - name: Build
        run: cmake --build build -- docs-with-api
      - uses: actions/upload-artifact@v2
        with:
          name: acts-docs
          path: docs/_build/html/
